{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","protoTyes","id","PropTypes","number","isRequired","string","arrayOf","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mSAUA,SAASA,EAAT,GAAyD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC3C,OAAO,sBAAKC,UAAU,QAAf,UACH,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACKD,EAAOI,KAAK,SAACC,EAAOC,GAAR,OACT,oBAAgBL,UAAU,gBAA1B,SACKI,GADIC,QAKjB,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAE,KAA/C,eAMZZ,EAAMa,UAAY,CACdC,GAAIC,IAAUC,OAAOC,WACrBhB,KAAMc,IAAUC,OAAOC,WACvBf,MAAOa,IAAUG,OAAOD,WACxBd,QAASY,IAAUG,OAAOD,WAC1Bb,OAAQW,IAAUG,OAAOD,WACzBZ,OAAQU,IAAUI,QAAQJ,IAAUG,QAAQD,YAGjCjB,QCgCAoB,G,kNA/DXC,MAAQ,CACJC,WAAW,EACXC,OAAQ,I,EAUZC,U,sBAAY,8BAAAC,EAAA,sEAKEC,IAAMC,IACZ,yEANI,gBAGQJ,EAHR,EAEJK,KACIA,KAAQL,OAKhB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAR3B,2C,kEAaTQ,KAAKN,c,+BAUE,IAAD,EACyBM,KAAKT,MAA3BC,EADH,EACGA,UAAWC,EADd,EACcA,OACnB,OACA,yBAASjB,UAAU,YAAnB,SACKgB,EACD,qBAAKhB,UAAU,SAAf,SACI,sBAAMA,UAAU,eAAhB,yBAGJ,qBAAKA,UAAU,SAAf,SACKiB,EAAOd,KAAI,SAAAsB,GAAK,OACjB,cAAC,EAAD,CAEAjB,GAAIiB,EAAMjB,GACVb,KAAM8B,EAAM9B,KACZC,MAAO6B,EAAM7B,MACbC,QAAS4B,EAAM5B,QACfC,OAAQ2B,EAAMC,mBACd3B,OAAQ0B,EAAM1B,QANT0B,EAAMjB,e,GAhDTmB,IAAMC,YCGxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.957b4c45.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\n/*component가 state를 필요없을때 class component를 쓸필요는 없음 고로\r\nmovies component는 state를 필요로 하지 않으므로 function component를 씀 \r\ngenres.map( (genre, index)에서 map은 key값(사용자 맘대로 변수명 부여(index) )을 따로 제공함\r\nsummary.length를 이용해 값을 알아온다음, {summary.slice(0,140)}에서 slice(시작점,끝점) 만 보여줌\r\nsummary는 영화 소개글\r\n*/\r\nfunction Movie({ year, title, summary, poster, genres}) {\r\n    return <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n            <h3 className=\"movie__title\">{title}</h3>\r\n            <h5 className=\"movie__year\">{year}</h5>\r\n            <ul className=\"movie__genres\">\r\n                {genres.map( (genre, index) => (\r\n                    <li key={index} className=\"genres__genre\">\r\n                        {genre}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n//id, title 등 값이 number, String 등 맞는지 확인하고 아닐시 호출 않함\r\nMovie.protoTyes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\n//state로 데이터 기본설정을 함, class App == component class\nclass App extends React.Component {\n    state = {\n        isLoading: true,\n        movies: []\n    };\n    /* getMovies = async () => {}; === getMovies = async function(){}; \n    async,await는 axios.get은 완료되기까지 시간이 필요하기에 async,await를 넣음(비동기방식),\n    async와await는 같이 쓰임, axios.get(API url)\n    console.log(movies);로 확인해서 찾고자하는 값 위치를 알아옴\n    movies에 있는 data에 있는 movies 배열만 꺼내올것 즉,\n    const data 배열안에 또다른 data 배열안에 movies배열값을 가져옴\n    setState로 movies에 대한 값을 바꿀수있게 함, isLoading은 false로 바꿈\n    list_movies.json.sort_by=rating, sort_by=rating은 rating(레이팅)별로 정렬함*/\n    getMovies = async () => {\n        const {\n            data: { \n                data: { movies }\n            }\n        } = await axios.get(\n            \"https://yts-proxy.nomadcoders1.now.sh/list_movies.json.sort_by=rating\"\n            );\n        this.setState({ movies, isLoading: false });\n    }\n\n    /* render() === component 가 실행(mount)되면 getMovies();를 호출함  */\n    componentDidMount() {\n       this.getMovies();\n    }   \n\n    /*isLoading이 true가 아니라면 movies를 보여줌\n    {movies.map(movie => (~~ ))} == {movies.map(function(map) {(~~)} } \n    {movies.map -> 배열(object list)을 map에 넣음\n    <Movie ~~~ /> ==> Movie에 있는 props를 불러온것 변수명={data안에movie.실제값 위치},\n    key는 기본키 이므로 꼭 넣어주어야 함\n    react에서는 class대신 className을 써야함 왜냐하면 component class와 헷갈리기 때문임\n    */\n    render() {\n        const { isLoading, movies } = this.state;\n        return (\n        <section className=\"container\">\n            {isLoading ? (\n            <div className=\"loader\">\n                <span className=\"loader__text\">Loading..</span>\n            </div>\n            ) : ( \n            <div className=\"movies\">\n                {movies.map(movie => (\n                <Movie \n                key={movie.id}\n                id={movie.id} \n                year={movie.year} \n                title={movie.title} \n                summary={movie.summary} \n                poster={movie.medium_cover_image}\n                genres={movie.genres} \n                /> \n                ))}\n            </div>\n            )}\n        </section>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n/*리액트는 기본적으로  component(컴포넌트)와 함께 동작함, 모든것은 component 로 이루어져 있음\n여기서는 render(<component /> << App이 컴포넌트), component는 HTML을 반환하는 함수\n<>이런식으로 component는 JS와 HTML이 섞였다 하여, JSX 라고 부름 이것은 react(리액트)에서만 쓰임\nreact(리액트) application(어플리케이션)은 한번에 하나의 component만 redering(렌더링)할 수 있음\n따라서 모든것은 App.js에 들어가야함*/\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}